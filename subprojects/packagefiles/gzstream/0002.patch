--- gzstream.h	2003-01-08 22:41:27
+++ gzstream.h	2022-12-30 20:44:48
@@ -32,6 +32,7 @@
 // standard C++ with new header file names and std:: namespace
 #include <iostream>
 #include <fstream>
+#include <string>
 #include <zlib.h>
 
 #ifdef GZSTREAM_NAMESPACE
@@ -93,21 +94,32 @@
 public:
     igzstream() : std::istream( &buf) {} 
     igzstream( const char* name, int open_mode = std::ios::in)
-        : gzstreambase( name, open_mode), std::istream( &buf) {}  
+        : std::istream( &buf) { gzstreambase::open( name, open_mode); }   
+    igzstream( const std::string name, int open_mode = std::ios::in)
+        : std::istream( &buf) { gzstreambase::open( name.c_str(), open_mode); }   
     gzstreambuf* rdbuf() { return gzstreambase::rdbuf(); }
     void open( const char* name, int open_mode = std::ios::in) {
         gzstreambase::open( name, open_mode);
     }
+    void open( const std::string name, int open_mode = std::ios::in) {
+        gzstreambase::open( name.c_str(), open_mode);
+    }
 };
 
 class ogzstream : public gzstreambase, public std::ostream {
 public:
     ogzstream() : std::ostream( &buf) {}
     ogzstream( const char* name, int mode = std::ios::out)
-        : gzstreambase( name, mode), std::ostream( &buf) {}  
+        : std::ostream( &buf) { gzstreambase::open( name, mode); }  
+    ogzstream( const std::string name, int mode = std::ios::out)
+        : std::ostream( &buf) { gzstreambase::open( name.c_str(), mode); }  
+    
     gzstreambuf* rdbuf() { return gzstreambase::rdbuf(); }
     void open( const char* name, int open_mode = std::ios::out) {
         gzstreambase::open( name, open_mode);
+    }
+    void open( const std::string name, int open_mode = std::ios::out) {
+        gzstreambase::open( name.c_str(), open_mode);
     }
 };
 
